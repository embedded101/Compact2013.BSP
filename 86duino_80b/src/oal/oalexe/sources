!if 0
Copyright (c) Microsoft Corporation.  All rights reserved.
!endif
!if 0
Use of this sample source code is subject to the terms of the Microsoft
license agreement under which you licensed this sample source code. If
you did not accept the terms of the license agreement, you are not
authorized to use this sample source code. For the terms of the license,
please see the license agreement between you and Microsoft or, if applicable,
see the LICENSE.RTF on your install media or the root of your tools installation.
THE SAMPLE SOURCE CODE IS PROVIDED "AS IS", WITH NO WARRANTIES OR INDEMNITIES.
!endif
# These indicate we're building oal.exe
TARGETNAME=oal
TARGETTYPE=PROGRAM

# oal.exe requires that we not have a fixed base address in memory
# this line instructes the linker to generate oal.rel, which will be
# used later in the build process
LDEFINES=/FIXED:NO

# Finish all previous directories before building this one
SYNCHRONIZE_DRAIN=1

# Our entry point is the startup function
EXEENTRY=StartUp

# Source files we're going to compile
# In this case none since we've compiled our OAL source files
# into oal.lib
SOURCES=

NOLIBC=1
# Libraries we're going to link to form the .exe
# These include:
# oemmain: implements the OEMInitGlobals function which
#          exchanges global function pointers between the
#          OAL and kernel
#
# nkldr  : CPU-specific startup code provided by the kernel
#
# nkstub : translation library for kernel functions so their
#          legacy names can be used
#
# oal    : our oal source library that we compiled in ..\oallib
TARGETLIBS= \
    $(_COMMONOAKROOT)\lib\$(_CPUDEPPATH)\oemmain.lib \
    $(_COMMONOAKROOT)\lib\$(_CPUDEPPATH)\nkldr.lib \
    $(_COMMONOAKROOT)\lib\$(_CPUDEPPATH)\nkstub.lib \
    $(_PLATLIB)\$(_CPUDEPPATH)\oal.lib \
# Link in oal_startup_x86.lib which is compiled and linked in platform\common.
# This library implements the IdentifyCpu, RebootHandler, CallBios32 and 
# GetDS function and StartUp function and OEMAddressTable for OAL entry point.
# Note that the memory size of default OEMAddressTable is 64MB but it could be
# changed by FIXUPVAR in MAKEIMG.
# It also provides the OEMInit function but is overrided by the BSP. 
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_startup_x86.lib \
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_mpsupport_x86.lib \
# Link in oal_intr_x86.lib which is compiled and linked in platform\common.
# This library implements the OALIntrEnableIrqs, OALIntrDisableIrqs
# OALIntrDoneIrqs and OALIntrRequestIrqs function.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_intr_x86.lib \
# Link in oal_power_x86 which is compiled and linked in platform\common.
# This library implements the IOCTL_HAL_ENABLE_WAKE, IOCTL_HAL_DISABLE_WAKE, 
# IOCTL_HAL_GET_WAKE_SOURCE and IOCTL_HAL_GET_WAKE_SOURCE handler and 
# OEMPowerOff function.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_power_x86.lib \
# Link in oal_rtc_x86.lib which is compiled and linked in platform\common.
# This library implements the IOCTL_HAL_INIT_RTC handler and
# OEMGetRealTime, OEMSetRealTime and OEMSetAlarmTime function.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_rtc_x86.lib \
# Link in oal_timer_x86.lib which is compiled and linked in platform\common.
# This library implements the OEMIdle, OEMGetTickCount, 
# OEMProfileTimerEnable and OEMProfileTimerDisable function.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_timer_x86.lib \
# Link in oal_qpc_x86.lib which is compiled and linked in platform\common.
# This library implements the OEMQueryPerformanceCounter and 
# OEMQueryPerformanceFrequency function.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_qpc_x86.lib \
# Link in oal_memory_x86.lib which is compiled and linked in platform\common.
# This library implements the OEMCacheRangeFlush and 
# OEMSetMemoryAttributes handler.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_memory_x86.lib \
# Link in oal_ioctl_x86.lib which is compiled and linked in platform\common.
# This library implements the IOCTL_PROCESSOR_INFORMATION and 
# IOCTL_HAL_REBOOT handler.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_ioctl_x86.lib \
# Link in oal_io_pci.lib which is compiled and linked in platform\common.
# This library implements the OALIoCtlHalDdkCall handler.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_io_isa_pci.lib \
# Link in oal_io_x86.lib which is compiled and linked in platform\common.
# This library implements the OALPCIPowerOff, OALPCIPowerOn,
# OALPCITransBusAddress, OALPCICfgRead, OALISACfgRead, OALPCICfgWrite,
# OALISACfgWrite and OALIntrRequestIrqs handler.
    $(_PLATCOMMONLIB)\$(_CPUINDPATH)\oal_io_x86.lib \
# Link in oal_intr_refcount.lib which is compiled and linked in platform\common.
# This library implements the OEMInterruptEnable, OEMInterruptDisable
# OEMInterruptDone and OEMInterruptMask function and 
# IOCTL_HAL_REQUEST_SYSINTR, IOCTL_HAL_RELEASE_SYSINTR and 
# IOCTL_HAL_REQUEST_IRQ handler.
    $(_PLATCOMMONLIB)\$(_CPUDEPPATH)\oal_intr_refcount.lib \
# Link in oal_ioctl.lib which is compiled and linked in platform\common.
# This library implements the OEMIoControl function.
    $(_PLATCOMMONLIB)\$(_CPUDEPPATH)\oal_ioctl.lib \
# Link in oal_log.lib which is compiled and linked in platform\common.
# This library implements the debug zones in the OAL through the
# dpCurSettings variable.
    $(_PLATCOMMONLIB)\$(_CPUDEPPATH)\oal_log.lib \
# Link in oal_cache_x86.lib which is compiled and linked in platform\common.
# This library implements the IOCTL_HAL_GET_CACHE_INFO handler.
    $(_PLATCOMMONLIB)\$(_CPUDEPPATH)\oal_cache_x86.lib \
    $(_COMMONOAKROOT)\lib\$(_CPUINDPATH)\ddk_io.lib \
    $(_COMMONOAKROOT)\lib\$(_CPUINDPATH)\bootcrt.lib

